<div class="container-seven-large"
     data-controller="sessions--sessions-show">

  <div id='page-controls'>

    <%= link_to training_path(@session.training), class: 'btn return-arrow' do %>
      <i class="fas fa-arrow-left"></i>
    <% end %>

    <div class='flex-row-between-centered'>

      <% if ['super_admin', 'admin', 'training manager', 'sevener+'].include?(current_user.access_level) %>

        <%= link_to training_session_workshops_path(@session.training, @session), method: :post, remote: true do %>
          <div class='btn-icon-grey' data-toggle='tooltip' title='Add Workshop'><i class="fas fa-plus"></i></div>
        <% end %>

      <% end %>

      <% if ['super_admin', 'admin', 'training manager'].include?(current_user.access_level) %>

        <a class='btn-icon-grey' data-toggle='modal' data-target='#editSession' data-toggle="tooltip" title="Edit">
          <i class="fas fa-pen"></i>
        </a>

        <%= link_to remove_session_trainers_path(session_id: @session.id, destroy: 'true'), class: "btn-icon-grey", data: { toggle: 'tooltip', confirm: 'Are you sure ?'}, title: 'Delete' do %>
          <i class="fas fa-trash-alt"></i>
        <% end %>

        <%= link_to training_copy_form_session_path(@session.training, @session), class: 'btn-icon-grey', data: {toggle: 'tooltip'}, title: 'Copy Session' do %>
          <i class="fas fa-copy"></i>
        <% end %>

      <% end %>

      <% if ['super_admin', 'admin', 'training manager'].include?(current_user.access_level) %>

        <%= render(Tools::SidebarComponent.new(title: 'Library',
                                           width: '35rem',
                                           side: 'right',
                                           button_klasses: 'btn-icon-grey',
                                           klasses: '')) do %>

          <div class="width-100">

            <% status = !params[:search].nil? %>

            <%= simple_form_for :search, url: session_content_search_path, html: { class: 'sidebar-search' }, method: 'GET', remote: true do |f| %>

              <div class="d-flex flex-column justify-content-start">

                <%= f.input :title, placeholder: 'Search',
                                    label: false,
                                    input_html: {
                                      class: "width-33rem mx-1rem",
                                      autocomplete: "off",
                                      data: { action: 'keyup->sessions--sessions-show#searchSubmit' }
                                    } %>

                <%= render(Tools::CheckboxCollectionComponent.new(elements: [['true', 'Deep search']],
                                                                input_name: 'search[deep_mode]',
                                                                data_action_check: 'click->sessions--sessions-show#searchSubmit',
                                                                select_all: false)) %>

                <%= f.hidden_field :session_id, value: @session.id %>

                <%= f.submit '', class: 'hidden-submit hidden' %>

              </div>

            <% end %>

            <div id="show-library"
                 class="mt-3rem">

              <%= render 'sessions/show/show_library', training: @session.training, session: @session, contents: @contents %>

            </div>

          </div>

        <% end %>

      <% end %>

      <div class="dropdown">

        <div class='btn-icon-grey dropdown-toggle' id="dropdownMenuButton" data-toggle="dropdown"><i class="fas fa-ellipsis-h"></i></div>

        <ul class="dropdown-menu dropdown-menu-right navbar-wagon-dropdown-menu" aria-labelledby="dropdownMenuButton">

          <li><%= link_to 'View mode', training_session_viewer_path(@session.training, @session) %></li>
          <li><%= link_to 'Export PDF', training_session_path(@session.training, @session, format: :pdf), target: :_blank %></li>

          <% if ['super_admin', 'admin', 'training manager'].include?(current_user.access_level) %>

            <li><%= link_to 'Import Attendees', import_attendees_form_path(session_id: @session.id) %></li>
            <li><%= link_to 'Presence Sheet', training_session_presence_sheet_path(@session.training, @session, format: :pdf), target: :_blank %></li>

          <% end %>

        </ul>

      </div>

    </div>

  </div>

  <div class="session-info-container">
    <%= render "sessions/show_middle_info", session: @session %>
  </div>

  <div id="mods" style="min-height: 50vh;">
    <%= render 'workshops/index', session: @session %>
  </div>

</div>


<!------------>
<!-- MODALS -->
<!------------>

<div id="editSession"
     class="modal fade"
     tabindex="-1"
     role="dialog"
     data-backdrop="static"
     data-keyboard="false">

  <div class="modal-dialog modal-lg" role="document" style="border-radius: 20px">
    <%= render 'edit', session: @session %>
  </div>

</div>

<div id="newUser"
     class="modal fade"
     tabindex="-1"
     role="dialog"
     data-backdrop="static"
     data-keyboard="false">

  <div class="modal-dialog" role="document" style="border-radius: 20px">
    <%= render 'session_trainers/trainers_link_to_session', training: nil, 
                                                            session: @session,
                                                            session_number: nil,
                                                            page: 'session' %>
  </div>

</div>

<div id="addAttendees"
     class="modal fade"
     tabindex="-1"
     role="dialog"
     data-backdrop="static"
     data-keyboard="false">

  <div class="modal-dialog" role="document" style="border-radius: 20px">
    <%= render 'session_attendees/new', session: @session %>
  </div>

</div>

<% @session.users.each do |user| %>

  <div id="consultUser<%= user.id %>"
       class="modal fade"
       tabindex="-1"
       role="dialog"
       data-backdrop="static"
       data-keyboard="false">

    <div class="modal-dialog" role="document" style="border-radius: 20px">
      <%= render 'users/consult', user: user %>
    </div>

  </div>

<% end %>


<!------------->
<!-- SCRIPTS -->
<!------------->

<script>

  formGuardian = false;

  function outsideClick(event, notelem) {
    notelem = $(notelem); // jquerize (optional)
    // check outside click for multiple elements
    var clickedOut = true, i, len = notelem.length;
    for (i = 0;i < len;i++)  {
        if (event.target == notelem[i] || notelem[i].contains(event.target)) {
            clickedOut = false;
        }
    }
    if (clickedOut) return true;
    else return false;
  }

  function openSessionForm(element) {
    if (formGuardian == false) {
      formGuardian = true;
      if (document.querySelectorAll('.hidden-form.active').length == 0) {
        form = element.parentNode.querySelector('.hidden-form');
        element.classList.toggle('hidden');
        form.classList.toggle('hidden');
        if (form.querySelector('.form-control') != null){
          initial_value = form.querySelector('.form-control').value;
        }
        if (form.querySelector('.datepicker') != null) {
          flatpickr(".datepicker", {
            disableMobile: true,
            dateFormat: "d/m/Y",});
        }
        inputs = form.querySelectorAll('input:not([type="hidden"])')
        selects = form.querySelectorAll('select')
        if (selects.length > 0 || inputs[0].type == 'radio') {
          window.addEventListener('click', function(e) {
            if (outsideClick(e, form.parentNode) && outsideClick(e, document.querySelectorAll('.flatpickr-calendar'))) {
              form.querySelector('.hidden-submit').click();
              formGuardian = false;
              this.removeEventListener('click', arguments.callee, false);
            }
          });
        } else {
          inputs[0].click()
          inputs.forEach((input) => {
            input.addEventListener('change', function(e) {
              form.querySelector('.hidden-submit').click();
              formGuardian = false;
              this.removeEventListener('change', arguments.callee, false);
            })
          })
          window.addEventListener('click', function(e) {
            if (outsideClick(e, form.parentNode) && outsideClick(e, document.querySelectorAll('.flatpickr-calendar'))) {
              form.querySelector('.hidden-submit').click();
              formGuardian = false;
              this.removeEventListener('click', arguments.callee, false);
            }
          });
        }
      }
    }
  };

</script>

<%= javascript_pack_tag 'tree' %>

<% if params[:search].present? || params[:end_search].present?%>
  <script>
    var library = document.getElementById('library');
    library.style.height = '100vh';
  </script>
<% end %>
