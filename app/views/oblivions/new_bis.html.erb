<div class="container-seven-large">
  <div id='page-controls'>
    <%= link_to training_path(@training), class: 'btn return-arrow' do %>
      <i class="fas fa-arrow-left"></i>
    <% end %>
  </div>


<section class="temp">
  <div class="interactive-form">
    <div class="roadmap">
      <div class="roadmapbtns">
        <div class="milestone start active" data-index="1">
          <span>1</span>
        </div>
        <div class="milestone end">
          <span>7</span>
        </div>
      </div>
    <div class="controls">
      <a class="prev disabled">Back</a>
      <a class="next" onclick='updateSummary();'>Next</a>
    </div>
    </div>
    <div class="form-wrapper">
      <form class="submission-handler">
        <div class="modules">
          <div class="module_greet active" data-map="greet">
            <h3>For which session would you like to create an Oblivion?</h3>
            <%= simple_form_for :create_oblivion, url: training_create_oblivion_path(@training) do |f| %>
              <div class="mod-date">
              <%= f.input :session_id, collection: @training.sessions, selected: @training.sessions.last.id, label_method: lambda { |session| "#{session.title} - #{session.date}" } %></div>
          </div>
          <div class="module_first" data-map="who are you?">
            <h3>What message would you like to send as your first reminder?</h3>
            <div class="fake-dropdown" id='fake-drop' onclick="myFunction(this);">
              <div class="fake-dropdown-template">
                <h4>Choose Reminder</h4>
               <i class="fas fa-chevron-down fa-2x"></i></i>
              </div>
              <div class='dropdown-pills pills-hidden' id='pills'>
                <span>
                  <div>
                    <input type="checkbox" id='1' class="tag-selector tag_create_my_own" onclick="selectOnlyThis(this);">
                    <label for="1">Create your own</label>
                  </div>
                </span>
                <%= f.collection_check_boxes :oblivion_contents1, OblivionContent.all.order(title: :asc), :id, :title do |b| %>
                  <div>
                    <%= b.check_box(class: 'tag-selector', onclick: "selectOnlyThis(this)") %>
                    <%= b.label %>
                  </div>
                <% end %>
                <!-- <input type="checkbox" id='2' class="tag-selector" onclick="selectOnlyThis(this.id)">
                <label for="2">Python 101</label>
                <input type="checkbox" id='3' class="tag-selector" onclick="selectOnlyThis(this.id)">
                <label for="3">Example 101</label>
                <input type="checkbox" id='4' class="tag-selector" onclick="selectOnlyThis(this.id)">
                <label for="4">Example 102</label> -->
              </div>
            </div>
            <div class="create-your-own choice-hidden" id='create-oblivion'>
              <h3>Create your own Reminder</h3>
              <%= f.text_field :title1, placeholder: 'Title' %>
              <%= f.rich_text_area :content1, placeholder: 'Content' %>
              <!-- <button class='validate-btn'><p>OK<i class="fas fa-check"></i></p></button> -->
            </div>
          </div>
          <div class="module_second" data-map="your business">
            <h3>What message would you like to send as your second reminder?</h3>
            <div class="fake-dropdown" id='fake-drop' onclick="myFunction(this);">
              <div class="fake-dropdown-template">
                <h4>Choose Reminder</h4>
               <i class="fas fa-chevron-down fa-2x"></i></i>
              </div>
              <div class='dropdown-pills pills-hidden' id='pills'>
                <span>
                  <div>
                    <input type="checkbox" id='2' class="tag-selector tag_create_my_own" onclick="selectOnlyThis(this);">
                    <label for="2">Create your own</label>
                  </div>
                </span>
                <%= f.collection_check_boxes :oblivion_contents2, OblivionContent.all.order(title: :asc), :id, :title do |b| %>
                  <div>
                    <%= b.check_box(class: 'tag-selector', onclick: "selectOnlyThis(this)") %>
                    <%= b.label %>
                  </div>
                <% end %>
              </div>
            </div>
            <div class="create-your-own choice-hidden" id='create-oblivion'>
              <h3>Create your own Reminder</h3>
              <%= f.text_field :title2, placeholder: 'Title' %>
              <%= f.rich_text_area :content2, placeholder: 'Content' %>
              <button class='validate-btn'><p>OK<i class="fas fa-check"></i></p></button>
            </div>
          </div>
          <div class="module_third" data-map="your target">
            <h3>What message would you like to send as your third reminder?</h3>
            <div class="fake-dropdown" id='fake-drop' onclick="myFunction(this);">
              <div class="fake-dropdown-template">
                <h4>Choose Reminder</h4>
               <i class="fas fa-chevron-down fa-2x"></i></i>
              </div>
              <div class='dropdown-pills pills-hidden' id='pills'>
                <span>
                  <div>
                    <input type="checkbox" id='3' class="tag-selector tag_create_my_own" onclick="selectOnlyThis(this);">
                    <label for="3">Create your own</label>
                  </div>
                </span>
                <%= f.collection_check_boxes :oblivion_contents3, OblivionContent.all.order(title: :asc), :id, :title do |b| %>
                  <div>
                    <%= b.check_box(class: 'tag-selector', onclick: "selectOnlyThis(this)") %>
                    <%= b.label %>
                  </div>
                <% end %>
              </div>
            </div>
            <div class="create-your-own choice-hidden" id='create-oblivion'>
              <h3>Create your own Reminder</h3>
              <%= f.text_field :title3, placeholder: 'Title' %>
              <%= f.rich_text_area :content3, placeholder: 'Content' %>
              <button class='validate-btn'><p>OK<i class="fas fa-check"></i></p></button>
            </div>
          </div>
          <div class="module_fourth" data-map="your service/product">
            <h3>What message would you like to send as your last reminder?</h3>
            <div class="fake-dropdown" id='fake-drop' onclick="myFunction(this);">
              <div class="fake-dropdown-template">
                <h4>Choose Reminder</h4>
               <i class="fas fa-chevron-down fa-2x"></i></i>
              </div>
              <div class='dropdown-pills pills-hidden' id='pills'>
                <span>
                  <div>
                    <input type="checkbox" id='4' class="tag-selector tag_create_my_own" onclick="selectOnlyThis(this);">
                    <label for="4">Create your own</label>
                  </div>
                </span>
                <%= f.collection_check_boxes :oblivion_contents4, OblivionContent.all.order(title: :asc), :id, :title do |b| %>
                  <div>
                    <%= b.check_box(class: 'tag-selector', onclick: "selectOnlyThis(this)") %>
                    <%= b.label %>
                  </div>
                <% end %>
              </div>
            </div>
            <div class="create-your-own choice-hidden" id='create-oblivion'>
              <h3>Create your own Reminder</h3>
              <%= f.text_field :title4, placeholder: 'Title' %>
              <%= f.rich_text_area :content4, placeholder: 'Content' %>
              <button class='validate-btn'><p>OK<i class="fas fa-check"></i></p></button>
            </div>
          </div>
          <div class="module_fifth" data-map="your added value">
            <h3>Hereâ€™s an overview of the oblivions you created in order for Session <%= @training.sessions.ids %> of <%= @training.title %></h3>
            <div class="oblivion-recap">
              <h3 id='title1'>Oblivion Title</h3>
              <p id='content1'>Oblivion content</p>
            </div>
            <div class="oblivion-recap">
              <h3 id='title2'>Oblivion Title</h3>
              <p id='content2'>Oblivion content</p>
            </div>
            <div class="oblivion-recap">
              <h3 id='title3'>Oblivion Title</h3>
              <p id='content3'>Oblivion content</p>
            </div>
            <div class="oblivion-recap">
              <h3 id='title4'>Oblivion Title</h3>
              <p id='content4'>Oblivion content</p>
            </div>
            <% end %>
          </div>
          <div class="module_submit" data-map="your something else">
            <h3>Congrats you created an oblivion for Session <%= @training.sessions.ids %> of <%= @training.title %></h3>
            <p>Your first oblivion will be sent <i>date.</i><br><br> Your second will be sent <i>date.</i><br><br> Your third will be sent <i>date.</i><br><br> Your last oblivion will be sent on this <i>date.</i></p>
          </div>
        </div>
      </form>
    </div>
  </div>
</section>
</div>

<script>
  $(function() {
  var prev = $('.prev'),
      next = $('.next'),
      nodeCount = $('.modules [class^="module_"]').length - 1;

  // Map and populate roadmap
  $('.modules').children('[class^=module_]').not(':first').not(':last').each(function() {
    var dataMap = $(this).attr('data-map'),
        nodeIndex = $('[class^="module_"]').index(this) + 1;
    $('.roadmap .end').before(
      '<div class="milestone" data-index="' + nodeIndex +'"><span>' + nodeIndex + '</span></div>'
    );
  });

  $('.milestone.end').attr('data-index', nodeCount + 1);

  function disableControls(type, i) {
    switch(type) {
      case 'prev':
        if (i === 0) {
          prev.addClass('disabled');
        }
        break;

      case 'next':
        if (i === nodeCount) {
          next.addClass('submission').html('&#x2714; Send');
        }
        break;

      case 'direct':
        if (i === 0) {
          prev.addClass('disabled');
        } else if (i === nodeCount) {
          next.addClass('submission').html('&#x2714; Send');
        }
    }

    var x = $('.modules').find('[class^="module_"].active'),
        y = $('[class^="module_"]').index(x);

    if (y != 0) {
      prev.removeClass('disabled');
    }

    if (y != nodeCount) {
      next.removeClass('submission').html('Next');
    }
  }

  prev.on('click', function() {
    var type = 'prev';
    let a = $('.modules').find('[class^="module_"].active'),
        b = $('[class^="module_"]').index(a);

    if (b > 0) {
      a.removeClass('active');
      let c = $('.modules [class^="module_"]').eq(b - 1).addClass('active');
      $('.roadmap .milestone.active').removeClass('active');
      $('.roadmap').children().eq(b - 1).addClass('active');
      b--;
    }

    disableControls(type, b);
  });

  next.on('click', function() {
    var type = 'next';
    let a = $('.modules').find('[class^="module_"].active'),
        b = $('[class^="module_"]').index(a);

    if (b < nodeCount) {
      a.removeClass('active');
      let c = $('.modules [class^="module_"]').eq(b + 1).addClass('active');
      $('.roadmap .milestone.active').removeClass('active');
      $('.roadmap').children().eq(b + 1).addClass('active');
      b++;
    }

    disableControls(type, b);
  });

  $('.milestone').on('click', function() {
    $('.roadmap').find('.milestone.active').removeClass('active');
    $('.modules').find('[class^="module_"].active').removeClass('active');
    $(this).addClass('active');
    let a = $('.roadmap').find('.milestone.active'),
        b = $('.milestone').index(a);

    $('.modules').children().eq(b).addClass('active');

    var type = 'direct',
        i = 0;
    disableControls(type, b);
  });
});

// FAKE DROPDOWN //
fakedrop = document.getElementById('fake-drop')
pills = document.getElementById('pills')
pills1 = document.getElementById('pills-1')
pills2 = document.getElementById('pills-2')
pills3 = document.getElementById('pills-3')
checkbox = document.getElementById('1')

function myFunction(element) {
  element.querySelector("#pills").classList.toggle("pills-hidden");
  // createoblivion = element.parentNode.querySelector('#create-oblivion')
  // choose = element.querySelector('.tag-selector');
  // choose.addEventListener('click', event => {
  // createoblivion.classList.remove('choice-hidden');
  //   if (checkbox.checked == false){
  //    createoblivion.classList.add('choice-hidden');
  //   }
  // })
}


function selectOnlyThis(element) {
  element.parentNode.parentNode.parentNode.querySelectorAll('.tag-selector').forEach((el) => {
    el.checked = false;
  })
  element.checked = true;
  choice_title = element.parentNode.parentNode.parentNode.parentNode.querySelector('h4');
  choice_title.innerHTML = element.parentNode.querySelector('label').innerHTML;
  if (element.classList.contains('tag_create_my_own')) {
    element.parentNode.parentNode.parentNode.parentNode.parentNode.querySelector('#create-oblivion').classList.remove('choice-hidden');
  } else {
    element.parentNode.parentNode.parentNode.parentNode.parentNode.querySelector('#create-oblivion').classList.add('choice-hidden');
  }
}

function updateSummary() {
  title1 = document.getElementById('create_oblivion_title1').value;
  title2 = document.getElementById('create_oblivion_title2').value;
  title3 = document.getElementById('create_oblivion_title3').value;
  title4 = document.getElementById('create_oblivion_title4').value;
  content1 = document.getElementById('create_oblivion_content1').value;
  content2 = document.getElementById('create_oblivion_content2').value;
  content3 = document.getElementById('create_oblivion_content3').value;
  content4 = document.getElementById('create_oblivion_content4').value;
  console.log(title1);
  document.getElementById('title1').innerHTML = title1
  document.getElementById('title2').innerHTML = title2
  document.getElementById('title3').innerHTML = title3
  document.getElementById('title4').innerHTML = title4
  document.getElementById('content1').innerHTML = content1
  document.getElementById('content2').innerHTML = content2
  document.getElementById('content3').innerHTML = content3
  document.getElementById('content4').innerHTML = content4
}
</script>
